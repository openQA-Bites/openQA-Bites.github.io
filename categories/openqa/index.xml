<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openQA on openQA bites</title><link>https://openQA-Bites.github.io/categories/openqa/</link><description>Recent content in openQA on openQA bites</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>felix.niederwanger@suse.de (phoenix)</managingEditor><webMaster>felix.niederwanger@suse.de (phoenix)</webMaster><lastBuildDate>Fri, 05 May 2023 09:32:47 +0200</lastBuildDate><atom:link href="https://openQA-Bites.github.io/categories/openqa/index.xml" rel="self" type="application/rss+xml"/><item><title>CLI: Check if there are jobs running</title><link>https://openQA-Bites.github.io/posts/2023/2023-05-05-cli_check_if_there_are_jobs_running/</link><pubDate>Fri, 05 May 2023 09:32:47 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-05-05-cli_check_if_there_are_jobs_running/</guid><description>I recently automated the installation of updates on my openQA development instance. The goal was to make the instance updates itself over night, but only if it is idle, i.</description></item><item><title>openQA: Could not configure /dev/net/tun (tap3): Operation not permitted</title><link>https://openQA-Bites.github.io/posts/2023/2023-03-13-tap_not_permitted/</link><pubDate>Mon, 13 Mar 2023 14:58:18 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-03-13-tap_not_permitted/</guid><description>I recently encountered a new interesting openQA issue:
[2023-03-13T14:18:22.651705+01:00] [warn] [pid:18929] !!! : qemu-system-x86_64: -netdev tap,id=qanet0,ifname=tap3,script=no,downscript=no: could not configure /dev/net/tun (tap3): Operation not permitted This is an error that you likely are encountering on a older openQA instance, after you setup multimachine jobs but haven&amp;rsquo;t used them in a while.</description></item><item><title>Safely clone a job on a production instance</title><link>https://openQA-Bites.github.io/posts/2023/2023-02-23-safely_clone_a_job_on_a_production_instance/</link><pubDate>Thu, 23 Feb 2023 14:42:22 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-02-23-safely_clone_a_job_on_a_production_instance/</guid><description>When developing new openQA tests you will have to run a lot of verification and debug test runs. This is why I typically encourage people to do all openQA testing on their own instances, to prevent spamming of the production instances.</description></item><item><title>Reviewing openQA jobs with openqa-revtui</title><link>https://openQA-Bites.github.io/posts/2023/2023-01-27-reviewing_openqa_jobs_with_openqa-revtui/</link><pubDate>Fri, 27 Jan 2023 09:12:16 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-01-27-reviewing_openqa_jobs_with_openqa-revtui/</guid><description>The openqa-revtui tool is a neat CLI utility for helping you review openQA jobs and job groups. It is part of the openqa-mon project, which has grown in the last years and now consists on more than the job monitoring tool itself.</description></item><item><title>openQA: emulated aarch64 worker</title><link>https://openQA-Bites.github.io/posts/2022/2022-10-04-emulated_aarch64_worker/</link><pubDate>Tue, 04 Oct 2022 08:29:20 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-10-04-emulated_aarch64_worker/</guid><description>Are you in dire need of an aarch64 worker on your own openQA instance, but no suitable hardware lying around? If speed is not your main concern, then don&amp;rsquo;t worry - you can just enable a qemu-emulated aarch64 worker on your openQA instance (probably x86_64).</description></item><item><title>openqa: asset download request but no domains passlisted</title><link>https://openQA-Bites.github.io/posts/2022-07-14-asset_download_request_but_no_domains_passlisted/</link><pubDate>Thu, 14 Jul 2022 13:23:55 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022-07-14-asset_download_request_but_no_domains_passlisted/</guid><description>Symptom
When posting a job using , you see an error message of the following kind:
$ openqa-cli api -X POST isos ... 403 Forbidden Asset download requested but no domains passlisted!</description></item><item><title>openQA and dehydrated</title><link>https://openQA-Bites.github.io/posts/2022/2022-03-29-openqa-dehydrated/</link><pubDate>Tue, 29 Mar 2022 16:52:35 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-03-29-openqa-dehydrated/</guid><description>In this blog post I&amp;rsquo;m gonna show you, how you can enable https for your openQA instance using dehydrated and the internal SUSE CA. The same procedure should also work for Let&amp;rsquo;s Encrypt.</description></item><item><title>Fix the "Wrong version of perltidy" issue in tools/tidy</title><link>https://openQA-Bites.github.io/posts/2022/2022-03-04-perltidy/</link><pubDate>Fri, 04 Mar 2022 10:32:23 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-03-04-perltidy/</guid><description>A commen error when running tools/tidy in the openSUSE/SLES tests repository for openQA is the following error:
Wrong version of perltidy. Found '20211027', expected '20211029'. This indicated a mismatch of the found vs.</description></item><item><title>Extract SCHEDULE from an openQA job</title><link>https://openQA-Bites.github.io/posts/2021/2021-12-13-extract-schedule-script/</link><pubDate>Mon, 13 Dec 2021 13:46:51 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-12-13-extract-schedule-script/</guid><description>Then using openqa-clone-job (and derivates) one can use the SCHEDULE variable to clone a test run with a custom set of test modules. This is particular useful, when developing a new test case and you need a verification run with e.</description></item><item><title>Clean empty job groups in openQA</title><link>https://openQA-Bites.github.io/posts/2021/2021-11-17-clean-empty-job-groups/</link><pubDate>Wed, 17 Nov 2021 09:51:26 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-11-17-clean-empty-job-groups/</guid><description>In this blog post I present you a small script, which can help you to remove empty job groups from your own openQA instance. This is helpful if you have a development instance with a lot of job groups, that you never use.</description></item><item><title>Playing with the openqa API</title><link>https://openQA-Bites.github.io/posts/2021/2021-09-23-api-playing/</link><pubDate>Fri, 24 Sep 2021 08:00:00 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-09-23-api-playing/</guid><description>Today we are going to play a bit around with the amazing API that every openQA instance provides. The aim of this tutorial is to show how the API can be accessed using a simple language like python.</description></item><item><title>openqa-cli Cheatsheet</title><link>https://openQA-Bites.github.io/posts/2021/2021-08-20-openqa-cli-cheatsheet/</link><pubDate>Fri, 20 Aug 2021 10:11:22 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-08-20-openqa-cli-cheatsheet/</guid><description>Checkout the new openqa-cli cheat sheet page where I start to collect some useful &amp;ldquo;how do I do &amp;hellip;&amp;rdquo; snippets for the openQA CLI utility openqa-cli.</description></item><item><title>Hidden gem - Show failures only in external results</title><link>https://openQA-Bites.github.io/posts/2021/2021-05-12-failing-external-results/</link><pubDate>Wed, 12 May 2021 09:25:29 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-05-12-failing-external-results/</guid><description>I just recently discovered one of the hidden gems in the openQA WebUI: Show only failing tests in external results.
Problem / User story Certain tests like ltp perform a series of tests within a test run and show the results as &amp;ldquo;External results&amp;rdquo;.</description></item><item><title>Active monitoring of openQA jobs</title><link>https://openQA-Bites.github.io/posts/2021/2021-02-25-openqa-mon/</link><pubDate>Thu, 25 Feb 2021 14:54:57 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-02-25-openqa-mon/</guid><description>openqa-mon is a little command-line utility to monitor one or multiple openQA jobs for their status. This tool is useful if you want to live monitor a handful of jobs closely e.</description></item><item><title>What are Needles</title><link>https://openQA-Bites.github.io/posts/2021/2021-02-10-needles/</link><pubDate>Wed, 10 Feb 2021 09:57:30 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-02-10-needles/</guid><description>In this blog post we are going to give you the easiest introduction to what needles are and how you can use them. While there are many good talks and documentation on needles out there, it took me longer than it should have to find a easy-to-use and easy-to-understand introduction into this topic alone.</description></item><item><title>Background bash commands</title><link>https://openQA-Bites.github.io/posts/2021/2021-02-04-background-scripts/</link><pubDate>Thu, 04 Feb 2021 14:50:02 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-02-04-background-scripts/</guid><description>This post describes the caveats and correct handling of the bash background operator within openQA.</description></item></channel></rss>