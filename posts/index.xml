<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on openQA bites</title><link>https://openQA-Bites.github.io/posts/</link><description>Recent content in Posts on openQA bites</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>felix.niederwanger@suse.de (phoenix)</managingEditor><webMaster>felix.niederwanger@suse.de (phoenix)</webMaster><lastBuildDate>Fri, 05 May 2023 09:32:47 +0200</lastBuildDate><atom:link href="https://openQA-Bites.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>CLI: Check if there are jobs running</title><link>https://openQA-Bites.github.io/posts/2023/2023-05-05-cli_check_if_there_are_jobs_running/</link><pubDate>Fri, 05 May 2023 09:32:47 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-05-05-cli_check_if_there_are_jobs_running/</guid><description>I recently automated the installation of updates on my openQA development instance. The goal was to make the instance updates itself over night, but only if it is idle, i.</description></item><item><title>openQA: Could not configure /dev/net/tun (tap3): Operation not permitted</title><link>https://openQA-Bites.github.io/posts/2023/2023-03-13-tap_not_permitted/</link><pubDate>Mon, 13 Mar 2023 14:58:18 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-03-13-tap_not_permitted/</guid><description>I recently encountered a new interesting openQA issue:
[2023-03-13T14:18:22.651705+01:00] [warn] [pid:18929] !!! : qemu-system-x86_64: -netdev tap,id=qanet0,ifname=tap3,script=no,downscript=no: could not configure /dev/net/tun (tap3): Operation not permitted This is an error that you likely are encountering on a older openQA instance, after you setup multimachine jobs but haven&amp;rsquo;t used them in a while.</description></item><item><title>VM test cluster using JeOS/MinimalVM images</title><link>https://openQA-Bites.github.io/posts/2023/2023-03-08-vm_test_cluster_using_jeos/</link><pubDate>Wed, 08 Mar 2023 14:41:06 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-03-08-vm_test_cluster_using_jeos/</guid><description>JeOS (Just enough OS) or MinimalVM images are minimal VM images (duh!) that can be used to quickly deploy VMs. Instead of a installation you only need to go through a first boot setup.</description></item><item><title>Safely clone a job on a production instance</title><link>https://openQA-Bites.github.io/posts/2023/2023-02-23-safely_clone_a_job_on_a_production_instance/</link><pubDate>Thu, 23 Feb 2023 14:42:22 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-02-23-safely_clone_a_job_on_a_production_instance/</guid><description>When developing new openQA tests you will have to run a lot of verification and debug test runs. This is why I typically encourage people to do all openQA testing on their own instances, to prevent spamming of the production instances.</description></item><item><title>molecule and systemd and cgroupns</title><link>https://openQA-Bites.github.io/posts/2023/2023-01-30-molecule_and_systemd/</link><pubDate>Mon, 30 Jan 2023 16:17:26 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-01-30-molecule_and_systemd/</guid><description>It&amp;rsquo;s Hackweek and I&amp;rsquo;m back at working on the GeekOops project. One of the more annoying tasks that I have been postponing already since some time is to adjust the molecule workflow to work with cgroups 2.</description></item><item><title>Reviewing openQA jobs with openqa-revtui</title><link>https://openQA-Bites.github.io/posts/2023/2023-01-27-reviewing_openqa_jobs_with_openqa-revtui/</link><pubDate>Fri, 27 Jan 2023 09:12:16 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-01-27-reviewing_openqa_jobs_with_openqa-revtui/</guid><description>The openqa-revtui tool is a neat CLI utility for helping you review openQA jobs and job groups. It is part of the openqa-mon project, which has grown in the last years and now consists on more than the job monitoring tool itself.</description></item><item><title>openQA: emulated aarch64 worker</title><link>https://openQA-Bites.github.io/posts/2022/2022-10-04-emulated_aarch64_worker/</link><pubDate>Tue, 04 Oct 2022 08:29:20 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-10-04-emulated_aarch64_worker/</guid><description>Are you in dire need of an aarch64 worker on your own openQA instance, but no suitable hardware lying around? If speed is not your main concern, then don&amp;rsquo;t worry - you can just enable a qemu-emulated aarch64 worker on your openQA instance (probably x86_64).</description></item><item><title>openqa: asset download request but no domains passlisted</title><link>https://openQA-Bites.github.io/posts/2022-07-14-asset_download_request_but_no_domains_passlisted/</link><pubDate>Thu, 14 Jul 2022 13:23:55 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022-07-14-asset_download_request_but_no_domains_passlisted/</guid><description>Symptom
When posting a job using , you see an error message of the following kind:
$ openqa-cli api -X POST isos ... 403 Forbidden Asset download requested but no domains passlisted!</description></item><item><title>molecule test: failed to connect to bus in systemd container</title><link>https://openQA-Bites.github.io/posts/2022/2022-06-27-molecule-failed-connect-dbus-systemd/</link><pubDate>Mon, 27 Jun 2022 13:39:07 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-06-27-molecule-failed-connect-dbus-systemd/</guid><description>Ansible Molecule is a project to help you test your ansible roles. I&amp;rsquo;m using molecule for automatically testing the ansible roles of geekoops.
So, while hacking on the geekoops roles, molecule test was complaining on my Tumbleweed machine:</description></item><item><title>BCI test tutorial</title><link>https://openQA-Bites.github.io/posts/2022/2022-06-16-bci_test_tutorial/</link><pubDate>Thu, 16 Jun 2022 13:23:42 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-06-16-bci_test_tutorial/</guid><description>Base Container Images (BCI) are a SUSE offer for a variety of container images suitable for building custom applications atop of the SUSE Linux Enterprise (SLE).</description></item><item><title>seidl - display current SUSE publiccloud images in your terminal</title><link>https://openQA-Bites.github.io/posts/2022/2022-05-19-seidl/</link><pubDate>Thu, 19 May 2022 09:57:43 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-05-19-seidl/</guid><description>seidl is a small pint query utility designed to easily list the current publiccloud images in the terminal. Pint (Public Cloud Information Tracker) is the SUSE service to provide data about the current state of publiccloud images across all supported public cloud service providers.</description></item><item><title>Running an aarch64 image in qemu</title><link>https://openQA-Bites.github.io/posts/2022/2022-04-13-qemu-aarch64/</link><pubDate>Wed, 13 Apr 2022 09:50:46 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-04-13-qemu-aarch64/</guid><description>Running a x86_64 image in qemu machine can be as easy as:
qemu-system-x86_64 openSUSE-Leap-15.3-JeOS.x86_64-kvm-and-xen.qcow2 # A more extended example qemu-system-x86_64 -m 1G -cpu host -enable-kvm -smp cores=2,threads=1,sockets=1 -drive file=openSUSE-Leap-15.</description></item><item><title>openQA and dehydrated</title><link>https://openQA-Bites.github.io/posts/2022/2022-03-29-openqa-dehydrated/</link><pubDate>Tue, 29 Mar 2022 16:52:35 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-03-29-openqa-dehydrated/</guid><description>In this blog post I&amp;rsquo;m gonna show you, how you can enable https for your openQA instance using dehydrated and the internal SUSE CA. The same procedure should also work for Let&amp;rsquo;s Encrypt.</description></item><item><title>Fix the "Wrong version of perltidy" issue in tools/tidy</title><link>https://openQA-Bites.github.io/posts/2022/2022-03-04-perltidy/</link><pubDate>Fri, 04 Mar 2022 10:32:23 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-03-04-perltidy/</guid><description>A commen error when running tools/tidy in the openSUSE/SLES tests repository for openQA is the following error:
Wrong version of perltidy. Found '20211027', expected '20211029'. This indicated a mismatch of the found vs.</description></item><item><title>VS Code and poetry</title><link>https://openQA-Bites.github.io/posts/2022/2022-02-15-vscode-poetry/</link><pubDate>Tue, 15 Feb 2022 14:13:55 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-02-15-vscode-poetry/</guid><description>poetry is (yet another) python packaging and dependency management system. In this blog post I&amp;rsquo;m gonna describe how I am working with poetry repositories within VS Codium, the freely licensed variant of VS Code.</description></item><item><title>Booting custom Azure VM images</title><link>https://openQA-Bites.github.io/posts/2022/2022-01-26-azure-images/</link><pubDate>Wed, 26 Jan 2022 16:03:48 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-01-26-azure-images/</guid><description>This blog post ist about uploading a custom VM disk image to the Azure cloud and create a VM to boot from this image.
If you just want to upload a image, checkout the az_upload_img bash script at the very end of this post for a easy-to-use script without the need to dive into details.</description></item><item><title>Extract SCHEDULE from an openQA job</title><link>https://openQA-Bites.github.io/posts/2021/2021-12-13-extract-schedule-script/</link><pubDate>Mon, 13 Dec 2021 13:46:51 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-12-13-extract-schedule-script/</guid><description>Then using openqa-clone-job (and derivates) one can use the SCHEDULE variable to clone a test run with a custom set of test modules. This is particular useful, when developing a new test case and you need a verification run with e.</description></item><item><title>Windows VM and Hyper-V (nested virtualization)</title><link>https://openQA-Bites.github.io/posts/2021/2021-12-02-hyperv-nested-guest/</link><pubDate>Thu, 02 Dec 2021 15:54:43 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-12-02-hyperv-nested-guest/</guid><description>In this encore to the Run Azure images in Hyper-V or kvm will briefly discuss, if it is possible to create your own Hyper-V Windows Hypervisor as a kvm guest on openSUSE Tumbleweed.</description></item><item><title>Run Azure images in Hyper-V or kvm</title><link>https://openQA-Bites.github.io/posts/2021/2021-12-01-run-azure-image-on-hyperv/</link><pubDate>Wed, 01 Dec 2021 14:00:11 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-12-01-run-azure-image-on-hyperv/</guid><description>Disclaimer: This blog post is about SUSE Linux Enterprise Server images on Azure and probably only useful to SUSE Employees who work with such images.</description></item><item><title>Container Layer Analyzer</title><link>https://openQA-Bites.github.io/posts/2021/2021-11-19-container-layer-analyzer/</link><pubDate>Fri, 19 Nov 2021 10:28:41 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-11-19-container-layer-analyzer/</guid><description>Today I&amp;rsquo;d like to point out an amazing new tool: The Container Layer Analyzer, written by Dan Čermák. Dan also wrote a comprehensive blog post about it, which explains it much better than what I do here.</description></item><item><title>Clean empty job groups in openQA</title><link>https://openQA-Bites.github.io/posts/2021/2021-11-17-clean-empty-job-groups/</link><pubDate>Wed, 17 Nov 2021 09:51:26 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-11-17-clean-empty-job-groups/</guid><description>In this blog post I present you a small script, which can help you to remove empty job groups from your own openQA instance. This is helpful if you have a development instance with a lot of job groups, that you never use.</description></item><item><title>Playing with the openqa API</title><link>https://openQA-Bites.github.io/posts/2021/2021-09-23-api-playing/</link><pubDate>Fri, 24 Sep 2021 08:00:00 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-09-23-api-playing/</guid><description>Today we are going to play a bit around with the amazing API that every openQA instance provides. The aim of this tutorial is to show how the API can be accessed using a simple language like python.</description></item><item><title>openqa-cli Cheatsheet</title><link>https://openQA-Bites.github.io/posts/2021/2021-08-20-openqa-cli-cheatsheet/</link><pubDate>Fri, 20 Aug 2021 10:11:22 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-08-20-openqa-cli-cheatsheet/</guid><description>Checkout the new openqa-cli cheat sheet page where I start to collect some useful &amp;ldquo;how do I do &amp;hellip;&amp;rdquo; snippets for the openQA CLI utility openqa-cli.</description></item><item><title>Use local go modules</title><link>https://openQA-Bites.github.io/posts/2021/2021-08-13-local-go-modules/</link><pubDate>Fri, 13 Aug 2021 10:58:14 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-08-13-local-go-modules/</guid><description>When dealing with go modules, sometimes it&amp;rsquo;s handy to test some changes from a local repository instead of using the upstream one.
Now, go programs are typically relying only on the upstream packages.</description></item><item><title>pasta - stupid simple pastebin service</title><link>https://openQA-Bites.github.io/posts/2021/2021-07-16-pasta/</link><pubDate>Fri, 16 Jul 2021 10:13:55 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-07-16-pasta/</guid><description>pasta is a stupid simple pastebin service for self-hosting. I started this project months ago because I was missing an easy, simple and no pain self-hosting solution.</description></item><item><title>Hidden gem - Show failures only in external results</title><link>https://openQA-Bites.github.io/posts/2021/2021-05-12-failing-external-results/</link><pubDate>Wed, 12 May 2021 09:25:29 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-05-12-failing-external-results/</guid><description>I just recently discovered one of the hidden gems in the openQA WebUI: Show only failing tests in external results.
Problem / User story Certain tests like ltp perform a series of tests within a test run and show the results as &amp;ldquo;External results&amp;rdquo;.</description></item><item><title>Hide IDE folders in git using a global gitignore</title><link>https://openQA-Bites.github.io/posts/2021/2021-04-23-global-gitignore/</link><pubDate>Fri, 23 Apr 2021 10:52:47 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-04-23-global-gitignore/</guid><description>Integrated development environemnts (IDE) are using their own folders withing your code repositories to store their settings. This can become annoying when working on a git repository and they keep popping up as untracked files:</description></item><item><title>IPMI remote access on old machines</title><link>https://openQA-Bites.github.io/posts/2021/2021-04-07-ipmi/</link><pubDate>Wed, 07 Apr 2021 16:06:48 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-04-07-ipmi/</guid><description>This is a very short update post about getting the IPMI Remote Control Java Applet from horrible old system running on modern systems. This is an issue that haunted me for some time.</description></item><item><title>Active monitoring of openQA jobs</title><link>https://openQA-Bites.github.io/posts/2021/2021-02-25-openqa-mon/</link><pubDate>Thu, 25 Feb 2021 14:54:57 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-02-25-openqa-mon/</guid><description>openqa-mon is a little command-line utility to monitor one or multiple openQA jobs for their status. This tool is useful if you want to live monitor a handful of jobs closely e.</description></item><item><title>What are Needles</title><link>https://openQA-Bites.github.io/posts/2021/2021-02-10-needles/</link><pubDate>Wed, 10 Feb 2021 09:57:30 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-02-10-needles/</guid><description>In this blog post we are going to give you the easiest introduction to what needles are and how you can use them. While there are many good talks and documentation on needles out there, it took me longer than it should have to find a easy-to-use and easy-to-understand introduction into this topic alone.</description></item><item><title>Background bash commands</title><link>https://openQA-Bites.github.io/posts/2021/2021-02-04-background-scripts/</link><pubDate>Thu, 04 Feb 2021 14:50:02 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-02-04-background-scripts/</guid><description>This post describes the caveats and correct handling of the bash background operator within openQA.</description></item></channel></rss>