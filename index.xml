<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openQA bites</title><link>https://openQA-Bites.github.io/</link><description>Recent content on openQA bites</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>felix.niederwanger@suse.de (phoenix)</managingEditor><webMaster>felix.niederwanger@suse.de (phoenix)</webMaster><lastBuildDate>Wed, 26 Jan 2022 16:03:48 +0100</lastBuildDate><atom:link href="https://openQA-Bites.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Booting custom Azure VM images</title><link>https://openQA-Bites.github.io/posts/2022-01-26-azure-images/</link><pubDate>Wed, 26 Jan 2022 16:03:48 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022-01-26-azure-images/</guid><description>This blog post ist about uploading a custom VM disk image to the Azure cloud and create a VM to boot from this image.
If you just want to upload a image, checkout the az_upload_img bash script at the very end of this post for a easy-to-use script without the need to dive into details.</description></item><item><title>Extract SCHEDULE from an openQA job</title><link>https://openQA-Bites.github.io/posts/2021-12-13-extract-schedule-script/</link><pubDate>Mon, 13 Dec 2021 13:46:51 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-12-13-extract-schedule-script/</guid><description>Then using openqa-clone-job (and derivates) one can use the SCHEDULE variable to clone a test run with a custom set of test modules. This is particular useful, when developing a new test case and you need a verification run with e.</description></item><item><title>Windows VM and Hyper-V (nested virtualization)</title><link>https://openQA-Bites.github.io/posts/2021-12-02-hyperv-nested-guest/</link><pubDate>Thu, 02 Dec 2021 15:54:43 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-12-02-hyperv-nested-guest/</guid><description>In this encore to the Run Azure images in Hyper-V or kvm will briefly discuss, if it is possible to create your own Hyper-V Windows Hypervisor as a kvm guest on openSUSE Tumbleweed.</description></item><item><title>Run Azure images in Hyper-V or kvm</title><link>https://openQA-Bites.github.io/posts/2021-12-01-run-azure-image-on-hyperv/</link><pubDate>Wed, 01 Dec 2021 14:00:11 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-12-01-run-azure-image-on-hyperv/</guid><description>Disclaimer: This blog post is about SUSE Linux Enterprise Server images on Azure and probably only useful to SUSE Employees who work with such images.</description></item><item><title>Container Layer Analyzer</title><link>https://openQA-Bites.github.io/posts/2021-11-19-container-layer-analyzer/</link><pubDate>Fri, 19 Nov 2021 10:28:41 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-11-19-container-layer-analyzer/</guid><description>Today I&amp;rsquo;d like to point out an amazing new tool: The Container Layer Analyzer, written by Dan Čermák. Dan also wrote a comprehensive blog post about it, which explains it much better than what I do here.</description></item><item><title>Clean empty job groups in openQA</title><link>https://openQA-Bites.github.io/posts/2021-11-17-clean-empty-job-groups/</link><pubDate>Wed, 17 Nov 2021 09:51:26 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-11-17-clean-empty-job-groups/</guid><description>In this blog post I present you a small script, which can help you to remove empty job groups from your own openQA instance. This is helpful if you have a development instance with a lot of job groups, that you never use.</description></item><item><title>Playing with the openqa API</title><link>https://openQA-Bites.github.io/posts/2021-09-23-api-playing/</link><pubDate>Fri, 24 Sep 2021 08:00:00 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-09-23-api-playing/</guid><description>Today we are going to play a bit around with the amazing API that every openQA instance provides. The aim of this tutorial is to show how the API can be accessed using a simple language like python.</description></item><item><title>openqa-cli Cheatsheet</title><link>https://openQA-Bites.github.io/posts/2021-08-20-openqa-cli-cheatsheet/</link><pubDate>Fri, 20 Aug 2021 10:11:22 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-08-20-openqa-cli-cheatsheet/</guid><description>Checkout the new openqa-cli cheat sheet page where I start to collect some useful &amp;ldquo;how do I do &amp;hellip;&amp;rdquo; snippets for the openQA CLI utility openqa-cli.</description></item><item><title>openqa-cli cheat sheet</title><link>https://openQA-Bites.github.io/openqa/openqa-cli-cheat-sheet/</link><pubDate>Thu, 19 Aug 2021 13:46:21 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/openqa/openqa-cli-cheat-sheet/</guid><description>openqa-cli is a command-line utility for interacting with openQA. The tool is versatile and allows you to control and interact with an arbitrary openQA instance from the comfort of your command line.</description></item><item><title>Use local go modules</title><link>https://openQA-Bites.github.io/posts/2021-08-13-local-go-modules/</link><pubDate>Fri, 13 Aug 2021 10:58:14 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-08-13-local-go-modules/</guid><description>When dealing with go modules, sometimes it&amp;rsquo;s handy to test some changes from a local repository instead of using the upstream one.
Now, go programs are typically relying only on the upstream packages.</description></item><item><title>pasta - stupid simple pastebin service</title><link>https://openQA-Bites.github.io/posts/2021-07-16-pasta/</link><pubDate>Fri, 16 Jul 2021 10:13:55 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-07-16-pasta/</guid><description>pasta is a stupid simple pastebin service for self-hosting. I started this project months ago because I was missing an easy, simple and no pain self-hosting solution.</description></item><item><title>Hidden gem - Show failures only in external results</title><link>https://openQA-Bites.github.io/posts/2021-05-12-failing-external-results/</link><pubDate>Wed, 12 May 2021 09:25:29 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-05-12-failing-external-results/</guid><description>I just recently discovered one of the hidden gems in the openQA WebUI: Show only failing tests in external results.
Problem / User story Certain tests like ltp perform a series of tests within a test run and show the results as &amp;ldquo;External results&amp;rdquo;.</description></item><item><title>Hide IDE folders in git using a global gitignore</title><link>https://openQA-Bites.github.io/posts/2021-04-23-global-gitignore/</link><pubDate>Fri, 23 Apr 2021 10:52:47 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-04-23-global-gitignore/</guid><description>Integrated development environemnts (IDE) are using their own folders withing your code repositories to store their settings. This can become annoying when working on a git repository and they keep popping up as untracked files:</description></item><item><title>Related links</title><link>https://openQA-Bites.github.io/related/</link><pubDate>Wed, 21 Apr 2021 16:49:39 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/related/</guid><description>Checkout the following related blogs of some of my friends. Blogs are listed in no particular order
Timo&amp;rsquo;s openSUSE Posts Cris' blog Zoltán&amp;rsquo;s Blog (do I have the accent right?</description></item><item><title>IPMI remote access on old machines</title><link>https://openQA-Bites.github.io/posts/2021-04-07-ipmi/</link><pubDate>Wed, 07 Apr 2021 16:06:48 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-04-07-ipmi/</guid><description>This is a very short update post about getting the IPMI Remote Control Java Applet from horrible old system running on modern systems. This is an issue that haunted me for some time.</description></item><item><title>about openQA-bites</title><link>https://openQA-Bites.github.io/about/</link><pubDate>Thu, 25 Feb 2021 16:18:27 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/about/</guid><description>openQA bites is a blog about tutorials, insights and love stories from a simple openQA developer. It aims to provide small and bite-sized posts about typical usage issues that every openQA dev encounters and atypical corner-cases that are worth to be written down.</description></item><item><title>Active monitoring of openQA jobs</title><link>https://openQA-Bites.github.io/posts/2021-02-25-openqa-mon/</link><pubDate>Thu, 25 Feb 2021 14:54:57 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-02-25-openqa-mon/</guid><description>openqa-mon is a little command-line utility to monitor one or multiple openQA jobs for their status. This tool is useful if you want to live monitor a handful of jobs closely e.</description></item><item><title>What are Needles</title><link>https://openQA-Bites.github.io/posts/2021-02-10-needles/</link><pubDate>Wed, 10 Feb 2021 09:57:30 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-02-10-needles/</guid><description>In this blog post we are going to give you the easiest introduction to what needles are and how you can use them. While there are many good talks and documentation on needles out there, it took me longer than it should have to find a easy-to-use and easy-to-understand introduction into this topic alone.</description></item><item><title>Background bash commands</title><link>https://openQA-Bites.github.io/posts/2021-02-04-background-scripts/</link><pubDate>Thu, 04 Feb 2021 14:50:02 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021-02-04-background-scripts/</guid><description>This post describes the caveats and correct handling of the bash background operator within openQA.</description></item></channel></rss>